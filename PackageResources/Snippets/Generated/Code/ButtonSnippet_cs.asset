%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 13807, guid: 0000000000000000e000000000000000, type: 0}
  m_Name: ButtonSnippet_cs
  m_EditorClassIdentifier: 
  m_Text: "using System;\nusing UnityEditor.UIElements;\nusing UnityEngine;\nusing
    UnityEngine.UIElements;\n\nnamespace UnityEditor.UIElements.Samples\n{\n    internal
    class ButtonSnippet : ElementSnippet<ButtonSnippet>\n    {\n        internal
    override void Apply(VisualElement container)\n        {\n            /// <sample>\n           
    // Action to perform when button is pressed.\n            // Toggles the text
    on all buttons in 'container'.\n            Action action = () =>\n           
    {\n                container.Query<Button>().ForEach((button) =>\n               
    {\n                    button.text = button.text.EndsWith(\"Button\") ? \"Button
    (Clicked)\" : \"Button\";\n                });\n            };\n\n           
    // Get a reference to the Button from UXML and assign it its action.\n           
    var uxmlButton = container.Q<Button>(\"the-uxml-button\");\n            uxmlButton.RegisterCallback<MouseUpEvent>((evt)
    => action());\n\n            // Create a new Button with an action and give it
    a style class.\n            var csharpButton = new Button(action) { text = \"C#
    Button\" };\n            csharpButton.AddToClassList(\"some-styled-button\");\n           
    container.Add(csharpButton);\n            /// </sample>\n        }\n    }\n}\n"
