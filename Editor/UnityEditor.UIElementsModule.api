// This file is generated. Do not modify by hand.
// XML documentation file not found. To check if public methods have XML comments,
// make sure the XML doc file is present and located next to the scraped dll
namespace UnityEditor.UIElements
{
    public abstract class BaseCompositeField<TValueType, TField, TFieldValue> : UnityEngine.UIElements.BaseField<TValueType> where TField : UnityEditor.UIElements.TextValueField<TFieldValue>, new()
    {
        public static readonly string fieldGroupUssClassName;
        public static readonly string fieldUssClassName;
        public static readonly string firstFieldVariantUssClassName;
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string multilineVariantUssClassName;
        public static readonly string spacerUssClassName;
        public static readonly string twoLinesVariantUssClassName;
        public static readonly string ussClassName;
        protected BaseCompositeField(string label, int fieldsByLine) {}
        public virtual void SetValueWithoutNotify(TValueType newValue);
        protected virtual void UpdateMixedValueContent();
    }

    public abstract class BaseMaskField<TChoice> : UnityEditor.UIElements.BasePopupField<TChoice, string>
    {
        public virtual void SetValueWithoutNotify(TChoice newValue);
    }

    public abstract class BasePopupField<TValueType, TValueChoice> : UnityEngine.UIElements.BaseField<TValueType>
    {
        public static readonly string arrowUssClassName;
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string textUssClassName;
        public static readonly string ussClassName;
        public string text { get; }
        protected UnityEngine.UIElements.TextElement textElement { get; }
        protected virtual void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
        public virtual void SetValueWithoutNotify(TValueType newValue);
        protected virtual void UpdateMixedValueContent();
    }

    [System.Runtime.CompilerServices.Extension] public static class BindingExtensions
    {
        public static readonly string prefabOverrideUssClassName;
        [System.Runtime.CompilerServices.Extension] public static void Bind(UnityEngine.UIElements.VisualElement element, UnityEditor.SerializedObject obj);
        [System.Runtime.CompilerServices.Extension] public static void BindProperty(UnityEngine.UIElements.IBindable field, UnityEditor.SerializedProperty property);
        [System.Runtime.CompilerServices.Extension] public static UnityEditor.SerializedProperty BindProperty(UnityEngine.UIElements.IBindable field, UnityEditor.SerializedObject obj);
        [System.Runtime.CompilerServices.Extension] public static void TrackPropertyValue(UnityEngine.UIElements.VisualElement element, UnityEditor.SerializedProperty property, System.Action<UnityEditor.SerializedProperty> callback = default(System.Action<UnityEditor.SerializedProperty>));
        [System.Runtime.CompilerServices.Extension] public static void Unbind(UnityEngine.UIElements.VisualElement element);
    }

    public class BoundsField : UnityEngine.UIElements.BaseField<UnityEngine.Bounds>
    {
        public static readonly string centerFieldUssClassName;
        public static readonly string extentsFieldUssClassName;
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public BoundsField() {}
        public BoundsField(string label) {}
        public virtual void SetValueWithoutNotify(UnityEngine.Bounds newValue);
        protected virtual void UpdateMixedValueContent();
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.BoundsField, UnityEditor.UIElements.BoundsField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.Bounds>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class BoundsIntField : UnityEngine.UIElements.BaseField<UnityEngine.BoundsInt>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string positionUssClassName;
        public static readonly string sizeUssClassName;
        public static readonly string ussClassName;
        public BoundsIntField() {}
        public BoundsIntField(string label) {}
        public virtual void SetValueWithoutNotify(UnityEngine.BoundsInt newValue);
        protected virtual void UpdateMixedValueContent();
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.BoundsIntField, UnityEditor.UIElements.BoundsIntField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.BoundsInt>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class ColorField : UnityEngine.UIElements.BaseField<UnityEngine.Color>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public bool hdr { get; set; }
        public bool showAlpha { get; set; }
        public bool showEyeDropper { get; set; }
        public ColorField() {}
        public ColorField(string label) {}
        protected virtual void UpdateMixedValueContent();
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ColorField, UnityEditor.UIElements.ColorField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseFieldTraits<UnityEngine.Color, UnityEngine.UIElements.UxmlColorAttributeDescription>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class CurveField : UnityEngine.UIElements.BaseField<UnityEngine.AnimationCurve>
    {
        public static readonly string borderUssClassName;
        public static readonly string contentUssClassName;
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public UnityEngine.Rect ranges { get; set; }
        public UnityEditor.UIElements.CurveField.RenderMode renderMode { get; set; }
        public virtual UnityEngine.AnimationCurve value { get; set; }
        public CurveField() {}
        public CurveField(string label) {}
        protected virtual void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
        public virtual void SetValueWithoutNotify(UnityEngine.AnimationCurve newValue);
        protected virtual void UpdateMixedValueContent();
        public enum RenderMode
        {
            public const UnityEditor.UIElements.CurveField.RenderMode Default = 0;
            public const UnityEditor.UIElements.CurveField.RenderMode Mesh = 1;
            public const UnityEditor.UIElements.CurveField.RenderMode Texture = 0;
            public int value__;
        }
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.CurveField, UnityEditor.UIElements.CurveField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.AnimationCurve>
        {
            public UxmlTraits() {}
        }
    }

    public enum DeltaSpeed
    {
        public const UnityEditor.UIElements.DeltaSpeed Fast = 0;
        public const UnityEditor.UIElements.DeltaSpeed Normal = 1;
        public const UnityEditor.UIElements.DeltaSpeed Slow = 2;
        public int value__;
    }

    public class DoubleField : UnityEditor.UIElements.TextValueField<double>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public DoubleField() {}
        public DoubleField(int maxLength) {}
        public DoubleField(string label, int maxLength = -1) {}
        public virtual void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEditor.UIElements.DeltaSpeed speed, double startValue);
        protected virtual double StringToValue(string str);
        protected virtual string ValueToString(double v);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.DoubleField, UnityEditor.UIElements.DoubleField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEditor.UIElements.TextValueFieldTraits<double, UnityEngine.UIElements.UxmlDoubleAttributeDescription>
        {
            public UxmlTraits() {}
        }
    }

    public class EnumField : UnityEngine.UIElements.BaseField<System.Enum>
    {
        public static readonly string arrowUssClassName;
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string textUssClassName;
        public static readonly string ussClassName;
        public string text { get; }
        public EnumField() {}
        public EnumField(System.Enum defaultValue) {}
        public EnumField(string label, System.Enum defaultValue = default(System.Enum)) {}
        protected virtual void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
        public void Init(System.Enum defaultValue);
        public void Init(System.Enum defaultValue, bool includeObsoleteValues);
        public virtual void SetValueWithoutNotify(System.Enum newValue);
        protected virtual void UpdateMixedValueContent();
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.EnumField, UnityEditor.UIElements.EnumField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<System.Enum>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class EnumFlagsField : UnityEditor.UIElements.BaseMaskField<System.Enum>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public EnumFlagsField() {}
        public EnumFlagsField(System.Enum defaultValue) {}
        public EnumFlagsField(string label) {}
        public EnumFlagsField(System.Enum defaultValue, bool includeObsoleteValues) {}
        public EnumFlagsField(string label, System.Enum defaultValue) {}
        public EnumFlagsField(string label, System.Enum defaultValue, bool includeObsoleteValues) {}
        public void Init(System.Enum defaultValue, bool includeObsoleteValues = False);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.EnumFlagsField, UnityEditor.UIElements.EnumFlagsField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<System.Enum>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class FieldMouseDragger<T>
    {
        public bool dragging { get; set; }
        public T startValue { get; set; }
        public FieldMouseDragger(UnityEditor.UIElements.IValueField<T> drivenField) {}
        public void SetDragZone(UnityEngine.UIElements.VisualElement dragElement);
        public void SetDragZone(UnityEngine.UIElements.VisualElement dragElement, UnityEngine.Rect hotZone);
    }

    public class FloatField : UnityEditor.UIElements.TextValueField<float>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public FloatField() {}
        public FloatField(int maxLength) {}
        public FloatField(string label, int maxLength = -1) {}
        public virtual void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEditor.UIElements.DeltaSpeed speed, float startValue);
        protected virtual float StringToValue(string str);
        protected virtual string ValueToString(float v);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.FloatField, UnityEditor.UIElements.FloatField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEditor.UIElements.TextValueFieldTraits<float, UnityEngine.UIElements.UxmlFloatAttributeDescription>
        {
            public UxmlTraits() {}
        }
    }

    public class GradientField : UnityEngine.UIElements.BaseField<UnityEngine.Gradient>
    {
        public static readonly string borderUssClassName;
        public static readonly string contentUssClassName;
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public UnityEngine.ColorSpace colorSpace { get; set; }
        public virtual UnityEngine.Gradient value { get; set; }
        public GradientField() {}
        public GradientField(string label) {}
        protected virtual void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
        public virtual void SetValueWithoutNotify(UnityEngine.Gradient newValue);
        protected virtual void UpdateMixedValueContent();
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.GradientField, UnityEditor.UIElements.GradientField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.Gradient>
        {
            public UxmlTraits() {}
        }
    }

    public class Hash128Field : UnityEngine.UIElements.TextInputBaseField<UnityEngine.Hash128>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public virtual UnityEngine.Hash128 value { get; set; }
        public Hash128Field() {}
        public Hash128Field(int maxLength) {}
        public Hash128Field(string label, int maxLength = -1) {}
        public virtual void SetValueWithoutNotify(UnityEngine.Hash128 newValue);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.Hash128Field, UnityEditor.UIElements.Hash128Field.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEditor.UIElements.TextValueFieldTraits<UnityEngine.Hash128, UnityEngine.UIElements.UxmlHash128AttributeDescription>
        {
            public UxmlTraits() {}
        }
    }

    public class InspectorElement : UnityEngine.UIElements.BindableElement
    {
        public static readonly string customInspectorUssClassName;
        public static readonly string debugInternalVariantUssClassName;
        public static readonly string debugVariantUssClassName;
        public static readonly string iMGUIContainerUssClassName;
        public static readonly string iMGUICustomVariantUssClassName;
        public static readonly string iMGUIDefaultVariantUssClassName;
        public static readonly string iMGUIInspectorVariantUssClassName;
        public static readonly string noInspectorFoundVariantUssClassName;
        public static readonly string uIECustomVariantUssClassName;
        public static readonly string uIEDefaultVariantUssClassName;
        public static readonly string uIEInspectorVariantUssClassName;
        public static readonly string ussClassName;
        public InspectorElement() {}
        public InspectorElement(UnityEditor.Editor editor) {}
        public InspectorElement(UnityEditor.SerializedObject obj) {}
        public InspectorElement(UnityEngine.Object obj) {}
        protected virtual void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
        public static void FillDefaultInspector(UnityEngine.UIElements.VisualElement container, UnityEditor.SerializedObject serializedObject, UnityEditor.Editor editor);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.InspectorElement, UnityEditor.UIElements.InspectorElement.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BindableElement.UxmlTraits
        {
            public UxmlTraits() {}
        }
    }

    public class IntegerField : UnityEditor.UIElements.TextValueField<int>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public IntegerField() {}
        public IntegerField(int maxLength) {}
        public IntegerField(string label, int maxLength = -1) {}
        public virtual void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEditor.UIElements.DeltaSpeed speed, int startValue);
        protected virtual int StringToValue(string str);
        protected virtual string ValueToString(int v);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.IntegerField, UnityEditor.UIElements.IntegerField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEditor.UIElements.TextValueFieldTraits<int, UnityEngine.UIElements.UxmlIntAttributeDescription>
        {
            public UxmlTraits() {}
        }
    }

    public interface IToolbarMenuElement
    {
        public abstract UnityEngine.UIElements.DropdownMenu menu { get; }
    }

    public interface IValueField<T>
    {
        public abstract T value { get; set; }
        public abstract void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEditor.UIElements.DeltaSpeed speed, T startValue);
        public abstract void StartDragging();
        public abstract void StopDragging();
    }

    public class LayerField : UnityEditor.UIElements.PopupField<int>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public virtual System.Func<int, string> formatListItemCallback { get; set; }
        public virtual System.Func<int, string> formatSelectedValueCallback { get; set; }
        public virtual int value { get; set; }
        public LayerField() {}
        public LayerField(int defaultValue) {}
        public LayerField(string label) {}
        public LayerField(string label, int defaultValue) {}
        public virtual void SetValueWithoutNotify(int newValue);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.LayerField, UnityEditor.UIElements.LayerField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<int>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class LayerMaskField : UnityEditor.UIElements.MaskField
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public virtual System.Func<string, string> formatListItemCallback { get; set; }
        public virtual System.Func<string, string> formatSelectedValueCallback { get; set; }
        public LayerMaskField() {}
        public LayerMaskField(int defaultMask) {}
        public LayerMaskField(string label) {}
        public LayerMaskField(string label, int defaultMask) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.LayerMaskField, UnityEditor.UIElements.LayerMaskField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<int>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class LongField : UnityEditor.UIElements.TextValueField<long>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public LongField() {}
        public LongField(int maxLength) {}
        public LongField(string label, int maxLength = -1) {}
        public virtual void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEditor.UIElements.DeltaSpeed speed, long startValue);
        protected virtual long StringToValue(string str);
        protected virtual string ValueToString(long v);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.LongField, UnityEditor.UIElements.LongField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEditor.UIElements.TextValueFieldTraits<long, UnityEngine.UIElements.UxmlLongAttributeDescription>
        {
            public UxmlTraits() {}
        }
    }

    public class MaskField : UnityEditor.UIElements.BaseMaskField<int>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public virtual System.Func<string, string> formatListItemCallback { get; set; }
        public virtual System.Func<string, string> formatSelectedValueCallback { get; set; }
        public MaskField() {}
        public MaskField(string label) {}
        public MaskField(System.Collections.Generic.List<string> choices, int defaultMask, System.Func<string, string> formatSelectedValueCallback = default(System.Func<string, string>), System.Func<string, string> formatListItemCallback = default(System.Func<string, string>)) {}
        public MaskField(string label, System.Collections.Generic.List<string> choices, int defaultMask, System.Func<string, string> formatSelectedValueCallback = default(System.Func<string, string>), System.Func<string, string> formatListItemCallback = default(System.Func<string, string>)) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.MaskField, UnityEditor.UIElements.MaskField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<int>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class ObjectField : UnityEngine.UIElements.BaseField<UnityEngine.Object>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string objectUssClassName;
        public static readonly string selectorUssClassName;
        public static readonly string ussClassName;
        public bool allowSceneObjects { get; set; }
        public System.Type objectType { get; set; }
        public ObjectField() {}
        public ObjectField(string label) {}
        public virtual void SetValueWithoutNotify(UnityEngine.Object newValue);
        protected virtual void UpdateMixedValueContent();
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ObjectField, UnityEditor.UIElements.ObjectField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.Object>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class PopupField<T> : UnityEditor.UIElements.BasePopupField<T, T>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public virtual System.Func<T, string> formatListItemCallback { get; set; }
        public virtual System.Func<T, string> formatSelectedValueCallback { get; set; }
        public int index { get; set; }
        public virtual T value { get; set; }
        public PopupField() {}
        public PopupField(string label = default(string)) {}
        public PopupField(System.Collections.Generic.List<T> choices, int defaultIndex, System.Func<T, string> formatSelectedValueCallback = default(System.Func<T, string>), System.Func<T, string> formatListItemCallback = default(System.Func<T, string>)) {}
        public PopupField(System.Collections.Generic.List<T> choices, T defaultValue, System.Func<T, string> formatSelectedValueCallback = default(System.Func<T, string>), System.Func<T, string> formatListItemCallback = default(System.Func<T, string>)) {}
        public PopupField(string label, System.Collections.Generic.List<T> choices, int defaultIndex, System.Func<T, string> formatSelectedValueCallback = default(System.Func<T, string>), System.Func<T, string> formatListItemCallback = default(System.Func<T, string>)) {}
        public PopupField(string label, System.Collections.Generic.List<T> choices, T defaultValue, System.Func<T, string> formatSelectedValueCallback = default(System.Func<T, string>), System.Func<T, string> formatListItemCallback = default(System.Func<T, string>)) {}
        public virtual void SetValueWithoutNotify(T newValue);
    }

    public class ProgressBar : UnityEngine.UIElements.BindableElement, UnityEngine.UIElements.INotifyValueChanged<float>
    {
        public static readonly string backgroundUssClassName;
        public static readonly string containerUssClassName;
        public static readonly string progressUssClassName;
        public static readonly string titleContainerUssClassName;
        public static readonly string titleUssClassName;
        public static readonly string ussClassName;
        public string title { get; set; }
        public virtual float value { get; set; }
        public ProgressBar() {}
        public virtual void SetValueWithoutNotify(float newValue);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ProgressBar, UnityEditor.UIElements.ProgressBar.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BindableElement.UxmlTraits
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class PropertyField : UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.IBindable
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public virtual UnityEngine.UIElements.IBinding binding { get; set; }
        public virtual string bindingPath { get; set; }
        public string label { get; set; }
        public PropertyField() {}
        public PropertyField(UnityEditor.SerializedProperty property) {}
        public PropertyField(UnityEditor.SerializedProperty property, string label) {}
        protected virtual void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
        public void RegisterValueChangeCallback(UnityEngine.UIElements.EventCallback<UnityEditor.UIElements.SerializedPropertyChangeEvent> callback);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.PropertyField, UnityEditor.UIElements.PropertyField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.VisualElement.UxmlTraits
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class RectField : UnityEditor.UIElements.BaseCompositeField<UnityEngine.Rect, UnityEditor.UIElements.FloatField, float>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public RectField() {}
        public RectField(string label) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.RectField, UnityEditor.UIElements.RectField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.Rect>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class RectIntField : UnityEditor.UIElements.BaseCompositeField<UnityEngine.RectInt, UnityEditor.UIElements.IntegerField, int>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public RectIntField() {}
        public RectIntField(string label) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.RectIntField, UnityEditor.UIElements.RectIntField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.RectInt>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public abstract class SearchFieldBase<TextInputType, T> : UnityEngine.UIElements.VisualElement, UnityEngine.UIElements.INotifyValueChanged<T> where TextInputType : UnityEngine.UIElements.TextInputBaseField<T>, new()
    {
        public static readonly string cancelButtonOffVariantUssClassName;
        public static readonly string cancelButtonUssClassName;
        public static readonly string popupVariantUssClassName;
        public static readonly string searchButtonUssClassName;
        public static readonly string textInputUssClassName;
        public static readonly string textUssClassName;
        public static readonly string ussClassName;
        protected UnityEngine.UIElements.Button searchButton { get; }
        protected TextInputType textInputField { get; }
        public virtual T value { get; set; }
        protected SearchFieldBase() {}
        protected abstract void ClearTextField();
        protected abstract bool FieldIsEmpty(T fieldValue);
        public virtual void SetValueWithoutNotify(T newValue);
    }

    public class TagField : UnityEditor.UIElements.PopupField<string>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public virtual System.Func<string, string> formatListItemCallback { get; set; }
        public virtual System.Func<string, string> formatSelectedValueCallback { get; set; }
        public virtual string value { get; set; }
        public TagField() {}
        public TagField(string label, string defaultValue = default(string)) {}
        public virtual void SetValueWithoutNotify(string newValue);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.TagField, UnityEditor.UIElements.TagField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<string>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public abstract class TextValueField<TValueType> : UnityEngine.UIElements.TextInputBaseField<TValueType>, UnityEditor.UIElements.IValueField<TValueType>
    {
        public string formatString { get; set; }
        public virtual TValueType value { get; set; }
        protected TextValueField(int maxLength, UnityEditor.UIElements.TextValueField<TValueType> textValueInput) {}
        protected TextValueField(string label, int maxLength, UnityEditor.UIElements.TextValueField<TValueType> textValueInput) {}
        protected void AddLabelDragger<TDraggerType>();
        public abstract void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEditor.UIElements.DeltaSpeed speed, TValueType startValue);
        public virtual void SetValueWithoutNotify(TValueType newValue);
        public virtual void StartDragging();
        public virtual void StopDragging();
        protected abstract class TextValueInput<TValueType> : UnityEngine.UIElements.TextInputBaseField<TValueType>
        {
            protected abstract string allowedCharacters { get; }
            public string formatString { get; set; }
            protected TextValueInput() {}
            public abstract void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEditor.UIElements.DeltaSpeed speed, TValueType startValue);
            protected virtual void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt);
            protected virtual void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt);
            public void StartDragging();
            public void StopDragging();
            protected virtual TValueType StringToValue(string str);
            protected abstract string ValueToString(TValueType value);
        }
    }

    public class TextValueFieldTraits<TValueType, TValueUxmlAttributeType> : UnityEngine.UIElements.BaseFieldTraits<TValueType, TValueUxmlAttributeType> where TValueUxmlAttributeType : UnityEngine.UIElements.TypedUxmlAttributeDescription<TValueType>, new()
    {
        public TextValueFieldTraits() {}
        public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
    }

    public class Toolbar : UnityEngine.UIElements.VisualElement
    {
        public static readonly string ussClassName;
        public Toolbar() {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.Toolbar>
        {
            public UxmlFactory() {}
        }
    }

    public class ToolbarBreadcrumbs : UnityEngine.UIElements.VisualElement
    {
        public static readonly string firstItemClassName;
        public static readonly string itemClassName;
        public static readonly string ussClassName;
        public ToolbarBreadcrumbs() {}
        public void PopItem();
        public void PushItem(string label, System.Action clickedEvent = default(System.Action));
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ToolbarBreadcrumbs>
        {
            public UxmlFactory() {}
        }
    }

    public class ToolbarButton : UnityEngine.UIElements.Button
    {
        public static readonly string ussClassName;
        public ToolbarButton() {}
        public ToolbarButton(System.Action clickEvent) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ToolbarButton, UnityEditor.UIElements.ToolbarButton.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.Button.UxmlTraits
        {
            public UxmlTraits() {}
        }
    }

    public class ToolbarMenu : UnityEngine.UIElements.TextElement, UnityEditor.UIElements.IToolbarMenuElement
    {
        public static readonly string arrowUssClassName;
        public static readonly string popupVariantUssClassName;
        public static readonly string textUssClassName;
        public static readonly string ussClassName;
        public virtual UnityEngine.UIElements.DropdownMenu menu { get; }
        public virtual string text { get; set; }
        public UnityEditor.UIElements.ToolbarMenu.Variant variant { get; set; }
        public ToolbarMenu() {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ToolbarMenu, UnityEditor.UIElements.ToolbarMenu.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.TextElement.UxmlTraits
        {
            public UxmlTraits() {}
        }
        public enum Variant
        {
            public const UnityEditor.UIElements.ToolbarMenu.Variant Default = 0;
            public const UnityEditor.UIElements.ToolbarMenu.Variant Popup = 1;
            public int value__;
        }
    }

    [System.Runtime.CompilerServices.Extension] public static class ToolbarMenuElementExtensions
    {
        [System.Runtime.CompilerServices.Extension] public static void ShowMenu(UnityEditor.UIElements.IToolbarMenuElement tbe);
    }

    public class ToolbarPopupSearchField : UnityEditor.UIElements.ToolbarSearchField, UnityEditor.UIElements.IToolbarMenuElement
    {
        public virtual UnityEngine.UIElements.DropdownMenu menu { get; }
        public ToolbarPopupSearchField() {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ToolbarPopupSearchField>
        {
            public UxmlFactory() {}
        }
    }

    public class ToolbarSearchField : UnityEditor.UIElements.SearchFieldBase<UnityEngine.UIElements.TextField, string>
    {
        public static readonly string cancelButtonOffVariantUssClassName;
        public static readonly string cancelButtonUssClassName;
        public static readonly string popupVariantUssClassName;
        public static readonly string searchButtonUssClassName;
        public static readonly string textUssClassName;
        public static readonly string ussClassName;
        protected UnityEngine.UIElements.Button searchButton { get; }
        public string value { get; set; }
        public ToolbarSearchField() {}
        protected virtual void ClearTextField();
        protected virtual bool FieldIsEmpty(string fieldValue);
        public virtual void SetValueWithoutNotify(string newValue);
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ToolbarSearchField>
        {
            public UxmlFactory() {}
        }
    }

    public class ToolbarSpacer : UnityEngine.UIElements.VisualElement
    {
        [System.Obsolete(@"The `fixedSpacerVariantUssClassName` style has been deprecated as is it now the default style.")] public static readonly string fixedSpacerVariantUssClassName;
        public static readonly string flexibleSpacerVariantUssClassName;
        public static readonly string ussClassName;
        public bool flex { get; set; }
        public ToolbarSpacer() {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ToolbarSpacer>
        {
            public UxmlFactory() {}
        }
    }

    public class ToolbarToggle : UnityEngine.UIElements.Toggle
    {
        public static readonly string ussClassName;
        public ToolbarToggle() {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.ToolbarToggle, UnityEditor.UIElements.ToolbarToggle.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.Toggle.UxmlTraits
        {
            public UxmlTraits() {}
        }
    }

    [System.AttributeUsage(1, AllowMultiple = true)] public sealed class UxmlNamespacePrefixAttribute : System.Attribute
    {
        public string ns { get; }
        public string prefix { get; }
        public UxmlNamespacePrefixAttribute(string ns, string prefix) {}
    }

    public class Vector2Field : UnityEditor.UIElements.BaseCompositeField<UnityEngine.Vector2, UnityEditor.UIElements.FloatField, float>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public Vector2Field() {}
        public Vector2Field(string label) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.Vector2Field, UnityEditor.UIElements.Vector2Field.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.Vector2>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class Vector2IntField : UnityEditor.UIElements.BaseCompositeField<UnityEngine.Vector2Int, UnityEditor.UIElements.IntegerField, int>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public Vector2IntField() {}
        public Vector2IntField(string label) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.Vector2IntField, UnityEditor.UIElements.Vector2IntField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.Vector2Int>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class Vector3Field : UnityEditor.UIElements.BaseCompositeField<UnityEngine.Vector3, UnityEditor.UIElements.FloatField, float>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public Vector3Field() {}
        public Vector3Field(string label) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.Vector3Field, UnityEditor.UIElements.Vector3Field.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.Vector3>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class Vector3IntField : UnityEditor.UIElements.BaseCompositeField<UnityEngine.Vector3Int, UnityEditor.UIElements.IntegerField, int>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public Vector3IntField() {}
        public Vector3IntField(string label) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.Vector3IntField, UnityEditor.UIElements.Vector3IntField.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.Vector3Int>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }

    public class Vector4Field : UnityEditor.UIElements.BaseCompositeField<UnityEngine.Vector4, UnityEditor.UIElements.FloatField, float>
    {
        public static readonly string inputUssClassName;
        public static readonly string labelUssClassName;
        public static readonly string ussClassName;
        public Vector4Field() {}
        public Vector4Field(string label) {}
        public class UxmlFactory : UnityEngine.UIElements.UxmlFactory<UnityEditor.UIElements.Vector4Field, UnityEditor.UIElements.Vector4Field.UxmlTraits>
        {
            public UxmlFactory() {}
        }
        public class UxmlTraits : UnityEngine.UIElements.BaseField<UnityEngine.Vector4>
        {
            public UxmlTraits() {}
            public virtual void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc);
        }
    }
}
