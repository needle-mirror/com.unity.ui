/******************************************************************************/
//
//                             DO NOT MODIFY
//          This file has been generated by the UIElementsGenerator tool
//              See InitialStyleGenerator class for details
//
/******************************************************************************/
namespace UnityEngine.UIElements.StyleSheets
{
    internal static class InitialStyle
    {
        private static ComputedStyle s_InitialStyle = ComputedStyle.CreateUninitialized();

        public static ComputedStyle Get()
        {
            return s_InitialStyle;
        }

        static InitialStyle()
        {
            s_InitialStyle.nonInheritedData.alignContent = Align.FlexStart;
            s_InitialStyle.nonInheritedData.alignItems = Align.Stretch;
            s_InitialStyle.nonInheritedData.alignSelf = Align.Auto;
            s_InitialStyle.nonInheritedData.backgroundColor = Color.clear;
            s_InitialStyle.nonInheritedData.backgroundImage = default(StyleBackground);
            s_InitialStyle.nonInheritedData.borderBottomColor = Color.clear;
            s_InitialStyle.nonInheritedData.borderBottomLeftRadius = 0f;
            s_InitialStyle.nonInheritedData.borderBottomRightRadius = 0f;
            s_InitialStyle.nonInheritedData.borderBottomWidth = 0f;
            s_InitialStyle.nonInheritedData.borderLeftColor = Color.clear;
            s_InitialStyle.nonInheritedData.borderLeftWidth = 0f;
            s_InitialStyle.nonInheritedData.borderRightColor = Color.clear;
            s_InitialStyle.nonInheritedData.borderRightWidth = 0f;
            s_InitialStyle.nonInheritedData.borderTopColor = Color.clear;
            s_InitialStyle.nonInheritedData.borderTopLeftRadius = 0f;
            s_InitialStyle.nonInheritedData.borderTopRightRadius = 0f;
            s_InitialStyle.nonInheritedData.borderTopWidth = 0f;
            s_InitialStyle.nonInheritedData.bottom = StyleKeyword.Auto;
            s_InitialStyle.inheritedData.color = Color.black;
            s_InitialStyle.nonInheritedData.cursor = default(StyleCursor);
            s_InitialStyle.nonInheritedData.display = DisplayStyle.Flex;
            s_InitialStyle.nonInheritedData.flexBasis = StyleKeyword.Auto;
            s_InitialStyle.nonInheritedData.flexDirection = FlexDirection.Column;
            s_InitialStyle.nonInheritedData.flexGrow = 0f;
            s_InitialStyle.nonInheritedData.flexShrink = 1f;
            s_InitialStyle.nonInheritedData.flexWrap = Wrap.NoWrap;
            s_InitialStyle.inheritedData.fontSize = 0f;
            s_InitialStyle.nonInheritedData.height = StyleKeyword.Auto;
            s_InitialStyle.nonInheritedData.justifyContent = Justify.FlexStart;
            s_InitialStyle.nonInheritedData.left = StyleKeyword.Auto;
            s_InitialStyle.nonInheritedData.marginBottom = 0f;
            s_InitialStyle.nonInheritedData.marginLeft = 0f;
            s_InitialStyle.nonInheritedData.marginRight = 0f;
            s_InitialStyle.nonInheritedData.marginTop = 0f;
            s_InitialStyle.nonInheritedData.maxHeight = StyleKeyword.None;
            s_InitialStyle.nonInheritedData.maxWidth = StyleKeyword.None;
            s_InitialStyle.nonInheritedData.minHeight = StyleKeyword.Auto;
            s_InitialStyle.nonInheritedData.minWidth = StyleKeyword.Auto;
            s_InitialStyle.nonInheritedData.opacity = 1f;
            s_InitialStyle.nonInheritedData.overflow = OverflowInternal.Visible;
            s_InitialStyle.nonInheritedData.paddingBottom = 0f;
            s_InitialStyle.nonInheritedData.paddingLeft = 0f;
            s_InitialStyle.nonInheritedData.paddingRight = 0f;
            s_InitialStyle.nonInheritedData.paddingTop = 0f;
            s_InitialStyle.nonInheritedData.position = Position.Relative;
            s_InitialStyle.nonInheritedData.right = StyleKeyword.Auto;
            s_InitialStyle.nonInheritedData.textOverflow = TextOverflow.Clip;
            s_InitialStyle.nonInheritedData.top = StyleKeyword.Auto;
            s_InitialStyle.nonInheritedData.unityBackgroundImageTintColor = Color.white;
            s_InitialStyle.nonInheritedData.unityBackgroundScaleMode = ScaleMode.StretchToFill;
            s_InitialStyle.inheritedData.unityFont = default(StyleFont);
            s_InitialStyle.inheritedData.unityFontStyleAndWeight = FontStyle.Normal;
            s_InitialStyle.nonInheritedData.unityOverflowClipBox = OverflowClipBox.PaddingBox;
            s_InitialStyle.nonInheritedData.unitySliceBottom = 0;
            s_InitialStyle.nonInheritedData.unitySliceLeft = 0;
            s_InitialStyle.nonInheritedData.unitySliceRight = 0;
            s_InitialStyle.nonInheritedData.unitySliceTop = 0;
            s_InitialStyle.inheritedData.unityTextAlign = TextAnchor.UpperLeft;
            s_InitialStyle.nonInheritedData.unityTextOverflowPosition = TextOverflowPosition.End;
            s_InitialStyle.inheritedData.visibility = Visibility.Visible;
            s_InitialStyle.inheritedData.whiteSpace = WhiteSpace.Normal;
            s_InitialStyle.nonInheritedData.width = StyleKeyword.Auto;
        }

        public static StyleEnum<Align> alignContent => s_InitialStyle.nonInheritedData.alignContent;
        public static StyleEnum<Align> alignItems => s_InitialStyle.nonInheritedData.alignItems;
        public static StyleEnum<Align> alignSelf => s_InitialStyle.nonInheritedData.alignSelf;
        public static StyleColor backgroundColor => s_InitialStyle.nonInheritedData.backgroundColor;
        public static StyleBackground backgroundImage => s_InitialStyle.nonInheritedData.backgroundImage;
        public static StyleColor borderBottomColor => s_InitialStyle.nonInheritedData.borderBottomColor;
        public static StyleLength borderBottomLeftRadius => s_InitialStyle.nonInheritedData.borderBottomLeftRadius;
        public static StyleLength borderBottomRightRadius => s_InitialStyle.nonInheritedData.borderBottomRightRadius;
        public static StyleFloat borderBottomWidth => s_InitialStyle.nonInheritedData.borderBottomWidth;
        public static StyleColor borderLeftColor => s_InitialStyle.nonInheritedData.borderLeftColor;
        public static StyleFloat borderLeftWidth => s_InitialStyle.nonInheritedData.borderLeftWidth;
        public static StyleColor borderRightColor => s_InitialStyle.nonInheritedData.borderRightColor;
        public static StyleFloat borderRightWidth => s_InitialStyle.nonInheritedData.borderRightWidth;
        public static StyleColor borderTopColor => s_InitialStyle.nonInheritedData.borderTopColor;
        public static StyleLength borderTopLeftRadius => s_InitialStyle.nonInheritedData.borderTopLeftRadius;
        public static StyleLength borderTopRightRadius => s_InitialStyle.nonInheritedData.borderTopRightRadius;
        public static StyleFloat borderTopWidth => s_InitialStyle.nonInheritedData.borderTopWidth;
        public static StyleLength bottom => s_InitialStyle.nonInheritedData.bottom;
        public static StyleColor color => s_InitialStyle.inheritedData.color;
        public static StyleCursor cursor => s_InitialStyle.nonInheritedData.cursor;
        public static StyleEnum<DisplayStyle> display => s_InitialStyle.nonInheritedData.display;
        public static StyleLength flexBasis => s_InitialStyle.nonInheritedData.flexBasis;
        public static StyleEnum<FlexDirection> flexDirection => s_InitialStyle.nonInheritedData.flexDirection;
        public static StyleFloat flexGrow => s_InitialStyle.nonInheritedData.flexGrow;
        public static StyleFloat flexShrink => s_InitialStyle.nonInheritedData.flexShrink;
        public static StyleEnum<Wrap> flexWrap => s_InitialStyle.nonInheritedData.flexWrap;
        public static StyleLength fontSize => s_InitialStyle.inheritedData.fontSize;
        public static StyleLength height => s_InitialStyle.nonInheritedData.height;
        public static StyleEnum<Justify> justifyContent => s_InitialStyle.nonInheritedData.justifyContent;
        public static StyleLength left => s_InitialStyle.nonInheritedData.left;
        public static StyleLength marginBottom => s_InitialStyle.nonInheritedData.marginBottom;
        public static StyleLength marginLeft => s_InitialStyle.nonInheritedData.marginLeft;
        public static StyleLength marginRight => s_InitialStyle.nonInheritedData.marginRight;
        public static StyleLength marginTop => s_InitialStyle.nonInheritedData.marginTop;
        public static StyleLength maxHeight => s_InitialStyle.nonInheritedData.maxHeight;
        public static StyleLength maxWidth => s_InitialStyle.nonInheritedData.maxWidth;
        public static StyleLength minHeight => s_InitialStyle.nonInheritedData.minHeight;
        public static StyleLength minWidth => s_InitialStyle.nonInheritedData.minWidth;
        public static StyleFloat opacity => s_InitialStyle.nonInheritedData.opacity;
        public static StyleEnum<OverflowInternal> overflow => s_InitialStyle.nonInheritedData.overflow;
        public static StyleLength paddingBottom => s_InitialStyle.nonInheritedData.paddingBottom;
        public static StyleLength paddingLeft => s_InitialStyle.nonInheritedData.paddingLeft;
        public static StyleLength paddingRight => s_InitialStyle.nonInheritedData.paddingRight;
        public static StyleLength paddingTop => s_InitialStyle.nonInheritedData.paddingTop;
        public static StyleEnum<Position> position => s_InitialStyle.nonInheritedData.position;
        public static StyleLength right => s_InitialStyle.nonInheritedData.right;
        public static StyleEnum<TextOverflow> textOverflow => s_InitialStyle.nonInheritedData.textOverflow;
        public static StyleLength top => s_InitialStyle.nonInheritedData.top;
        public static StyleColor unityBackgroundImageTintColor => s_InitialStyle.nonInheritedData.unityBackgroundImageTintColor;
        public static StyleEnum<ScaleMode> unityBackgroundScaleMode => s_InitialStyle.nonInheritedData.unityBackgroundScaleMode;
        public static StyleFont unityFont => s_InitialStyle.inheritedData.unityFont;
        public static StyleEnum<FontStyle> unityFontStyleAndWeight => s_InitialStyle.inheritedData.unityFontStyleAndWeight;
        public static StyleEnum<OverflowClipBox> unityOverflowClipBox => s_InitialStyle.nonInheritedData.unityOverflowClipBox;
        public static StyleInt unitySliceBottom => s_InitialStyle.nonInheritedData.unitySliceBottom;
        public static StyleInt unitySliceLeft => s_InitialStyle.nonInheritedData.unitySliceLeft;
        public static StyleInt unitySliceRight => s_InitialStyle.nonInheritedData.unitySliceRight;
        public static StyleInt unitySliceTop => s_InitialStyle.nonInheritedData.unitySliceTop;
        public static StyleEnum<TextAnchor> unityTextAlign => s_InitialStyle.inheritedData.unityTextAlign;
        public static StyleEnum<TextOverflowPosition> unityTextOverflowPosition => s_InitialStyle.nonInheritedData.unityTextOverflowPosition;
        public static StyleEnum<Visibility> visibility => s_InitialStyle.inheritedData.visibility;
        public static StyleEnum<WhiteSpace> whiteSpace => s_InitialStyle.inheritedData.whiteSpace;
        public static StyleLength width => s_InitialStyle.nonInheritedData.width;
    }
}
